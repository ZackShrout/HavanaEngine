<ResourceDictionary x:Class="HavanaEditor.Dictionaries.ControlTemplates"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:HavanaEditor.Dictionaries">

    <!-- TODO: change this back to a static resource once Visual Studio fixes the bug -->
    <Style TargetType="{x:Type TextBlock}" x:Key="LightTextBlockStyle">
        <Setter Property="Foreground" Value="{DynamicResource Editor.FontBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <!-- TODO: change this back to a static resource once Visual Studio fixes the bug -->
    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyle">
        <Setter Property="Foreground" Value="{DynamicResource Editor.FontBrush}"/>
        <Setter Property="Background" Value="{DynamicResource Editor.Window.GreyBrush2}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Editor.Window.GreyBrush4}"/>
        <Setter Property="SelectionBrush" Value="White"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0,2"/>
    </Style>
    
    <Style TargetType="{x:Type TextBox}" x:Key="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
        <EventSetter Event="KeyDown" Handler="OnTextBox_KeyDown"/>
    </Style>

    <!-- TODO: change this back to a static resource once Visual Studio fixes the bug -->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" 
                                   Stroke="{DynamicResource Editor.FontBrush}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TODO: change this back to a static resource once Visual Studio fixes the bug -->
    <Style TargetType="{x:Type ListBoxItem}" x:Key="ListBoxItemStyle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,2,0,2" />
        <Setter Property="HorizontalContentAlignment" 
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" 
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" 
                                        Value="{DynamicResource Editor.Window.GreyBrush4}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" 
                                        Value="{DynamicResource Editor.Selected.BackgroundBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource Editor.Selected.BackgroundColor}"
                                                         Opacity="0.5"/>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" 
                                        Value="{DynamicResource Editor.Window.GreyBrush4}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" 
                                        Value="{DynamicResource Editor.Disabled.FontBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TODO: change this back to a static resource once Visual Studio fixes the bug -->
    <Style TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemStyle}"/>
        <Setter Property="Background" Value="{DynamicResource Editor.Window.GreyBrush2}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Editor.Window.GreyBrush4}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource Editor.FontBrush}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                BorderBrush="{TemplateBinding BorderBrush}" Padding="1" 
                                SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Selector.IsSelectionActive" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" 
                                        Value="{DynamicResource Editor.Selected.BackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" 
                                        Value="{DynamicResource Editor.Window.GreyBrush2}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" 
                                        Value="{DynamicResource Editor.Window.GreyBrush4}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" 
                                        Value="{DynamicResource Editor.Selected.BackgroundBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" 
                                               Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TODO: change this back to a static resource once Visual Studio fixes the bug -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="{DynamicResource Editor.Window.GreyColor5}" Offset="0"/>
                    <GradientStop Color="{DynamicResource Editor.Window.GreyColor4}" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="{DynamicResource Editor.Window.GreyColor6}" Offset="0"/>
                    <GradientStop Color="{DynamicResource Editor.Window.GreyColor2}" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource Editor.FontBrush}"/>
        <Setter Property="BorderThickness" Value="0,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1"  x:Key="Button.Selected.OpacityBrush">
                            <GradientStop Color="White" Offset="0"/>
                            <GradientStop Color="#88ffffff" Offset="1"/>
                        </LinearGradientBrush>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1"  x:Key="Button.Pressed.OpacityBrush">
                            <GradientStop Color="White" Offset="1"/>
                            <GradientStop Color="#88ffffff" Offset="0"/>
                        </LinearGradientBrush>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1"  x:Key="Button.Disabled.BackgroundBrush">
                            <GradientStop Color="{DynamicResource Editor.Window.GreyColor4}" Offset="0"/>
                            <GradientStop Color="{DynamicResource Editor.Window.GreyColor3}" Offset="1"/>
                        </LinearGradientBrush>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1"  x:Key="Button.Disabled.BorderBrush">
                            <GradientStop Color="{DynamicResource Editor.Window.GreyColor5}" Offset="0"/>
                            <GradientStop Color="{DynamicResource Editor.Window.GreyColor1}" Offset="1"/>
                        </LinearGradientBrush>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
                                    SnapsToDevicePixels="true" CornerRadius="3"/>
                        <Border x:Name="borderSelected" SnapsToDevicePixels="True" CornerRadius="3" BorderThickness="0"
                                    BorderBrush="Transparent"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Background" TargetName="borderSelected" Value="{DynamicResource Editor.Selected.BackgroundBrush}"/>
                            <Setter Property="OpacityMask" TargetName="borderSelected" Value="{DynamicResource Button.Selected.OpacityBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                            <Setter Property="Background" TargetName="borderSelected" Value="{DynamicResource Editor.Selected.BackgroundBrush}"/>
                            <Setter Property="OpacityMask" TargetName="borderSelected" Value="{DynamicResource Button.Selected.OpacityBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                            <Setter Property="Background" TargetName="borderSelected" Value="{DynamicResource Editor.Selected.BackgroundBrush}"/>
                            <Setter Property="OpacityMask" TargetName="borderSelected" Value="{DynamicResource Button.Pressed.OpacityBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Editor.Disabled.FontBrush}"/>
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Disabled.BackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.Disabled.BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TODO: change this back to a static resource once Visual Studio fixes the bug -->
    <Style TargetType="Button" x:Key="SimpleButton">
        <Setter Property="Background" Value="{DynamicResource Editor.Window.GreyBrush3}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Editor.Window.GreyBrush5}"/>
        <Setter Property="Foreground" Value="{DynamicResource Editor.FontBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Editor.Window.GreyBrush5}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TODO: change this back to a static resource once Visual Studio fixes the bug -->
    <Style TargetType="{x:Type Window}" x:Key="HavanaWindowStyle">
        <Setter Property="BorderBrush" Value="{DynamicResource Editor.Selected.BackgroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource Editor.Window.GreyBrush1}"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="0"
                              ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                              GlassFrameThickness="0" CaptionHeight="20"
                              NonClientFrameEdges="None"
                              UseAeroCaptionButtons="False"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="1"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}"
                                                 Value="Maximized">
                                        <Setter Property="BorderThickness" 
                                                Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <AdornerDecorator>
                                <ContentPresenter Margin="5,24,5,5"/>
                            </AdornerDecorator>
                            
                            <!-- Header bar -->
                            <DockPanel VerticalAlignment="Top" LastChildFill="False">
                                <DockPanel.Resources>
                                    <Style TargetType="Path">
                                        <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                                        <Setter Property="StrokeThickness" Value="1"/>
                                    </Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource SimpleButton}">
                                        <Setter Property="Width" Value="24"/>
                                        <Setter Property="Height" Value="14"/>
                                        <Setter Property="Margin" Value="0,2,1,0"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="DockPanel.Dock" Value="Right"/>
                                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                    </Style>
                                </DockPanel.Resources>
                                <TextBlock Margin="5,2,0,0" VerticalAlignment="Center"
                                           DockPanel.Dock="Left" FontWeight="Bold"
                                           Foreground="{DynamicResource Editor.FontBrush}"
                                           Text="{TemplateBinding Title}"/>
                                <Button x:Name="closeButton" Click="OnClose_Button_Click">
                                    <Button.Content>
                                        <Grid>
                                            <Path Data="M1,1.5L 8,8.5" Margin="0"/>
                                            <Path Data="M1,8.5L 8.1.5" Margin="0"/>
                                        </Grid>
                                    </Button.Content>
                                </Button>
                                <Button x:Name="restoreButton" Click="OnMaximizeRestore_Button_Click">
                                    <Button.Content>
                                        <Rectangle Stroke="{DynamicResource Editor.FontBrush}" StrokeThickness="1"
                                                       Width="10" Height="8"/>
                                    </Button.Content>
                                </Button>
                                <Button x:Name="minimizeButton" Click="OnMinimize_Button_Click">
                                    <Button.Content>
                                        <Rectangle Stroke="{DynamicResource Editor.FontBrush}" StrokeThickness="1"
                                                       Width="10" Height="1" Margin="0,4,0,0"/>
                                    </Button.Content>
                                </Button>
                            </DockPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TODO: change this back to a static resource once Visual Studio fixes the bug -->
    <Style TargetType="{x:Type Window}" x:Key="HavanaDialogStyle">
        <Setter Property="BorderBrush" Value="{DynamicResource Editor.Selected.BackgroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource Editor.Window.GreyBrush1}"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="0"
                              ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                              GlassFrameThickness="0" CaptionHeight="20"
                              NonClientFrameEdges="None"
                              UseAeroCaptionButtons="False"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="1"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}"
                                                 Value="Maximized">
                                        <Setter Property="BorderThickness" 
                                                Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <AdornerDecorator>
                                <ContentPresenter Margin="5,24,5,5"/>
                            </AdornerDecorator>

                            <!-- Header bar -->
                            <DockPanel VerticalAlignment="Top" LastChildFill="False">
                                <DockPanel.Resources>
                                    <Style TargetType="Path">
                                        <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                                        <Setter Property="StrokeThickness" Value="1"/>
                                    </Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource SimpleButton}">
                                        <Setter Property="Width" Value="24"/>
                                        <Setter Property="Height" Value="14"/>
                                        <Setter Property="Margin" Value="0,2,1,0"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="DockPanel.Dock" Value="Right"/>
                                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                    </Style>
                                </DockPanel.Resources>
                                <TextBlock Margin="5,2,0,0" VerticalAlignment="Center"
                                           DockPanel.Dock="Left" FontWeight="Bold"
                                           Foreground="{DynamicResource Editor.FontBrush}"
                                           Text="{TemplateBinding Title}"/>
                                <Button x:Name="closeButton" Click="OnClose_Button_Click">
                                    <Button.Content>
                                        <Grid>
                                            <Path Data="M1,1.5L 8,8.5" Margin="0"/>
                                            <Path Data="M1,8.5L 8.1.5" Margin="0"/>
                                        </Grid>
                                    </Button.Content>
                                </Button>
                            </DockPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>