# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_x64
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
INCLUDES += -I. -ICommon
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS += -lX11
LDDEPS +=
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug_x64)
TARGETDIR = ../x64/Debug
TARGET = $(TARGETDIR)/libEngine.a
OBJDIR = ../x64/Debug/x64/Debug/Engine
DEFINES += -DDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -ffast-math -g -Wall -Wextra
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -ffast-math -g -Wall -Wextra -std=c++17 -fno-exceptions -fno-rtti
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release_x64)
TARGETDIR = ../x64/Release
TARGET = $(TARGETDIR)/libEngine.a
OBJDIR = ../x64/Release/x64/Release/Engine
DEFINES += -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -fomit-frame-pointer -O2 -Wall -Wextra
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -fomit-frame-pointer -O2 -Wall -Wextra -std=c++17 -fno-exceptions -fno-stack-protector -fno-rtti
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -flto -s

else ifeq ($(config),debugeditor_x64)
TARGETDIR = ../x64/DebugEditor
TARGET = $(TARGETDIR)/libEngine.a
OBJDIR = ../x64/DebugEditor
DEFINES += -DDEBUG -DUSE_WITH_EDITOR
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -ffast-math -g -Wall -Wextra
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -ffast-math -g -Wall -Wextra -std=c++17 -fno-exceptions -fno-rtti
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),releaseeditor_x64)
TARGETDIR = ../x64/ReleaseEditor
TARGET = $(TARGETDIR)/libEngine.a
OBJDIR = ../x64/ReleaseEditor
DEFINES += -DNDEBUG -DUSE_WITH_EDITOR
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -fomit-frame-pointer -O2 -Wall -Wextra
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -fomit-frame-pointer -O2 -Wall -Wextra -std=c++17 -fno-exceptions -fno-stack-protector -fno-rtti
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -flto -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/ContentLoaderWin32.o
GENERATED += $(OBJDIR)/ContentToEngine.o
GENERATED += $(OBJDIR)/D3D12Camera.o
GENERATED += $(OBJDIR)/D3D12Content.o
GENERATED += $(OBJDIR)/D3D12Core.o
GENERATED += $(OBJDIR)/D3D12GPass.o
GENERATED += $(OBJDIR)/D3D12Helpers.o
GENERATED += $(OBJDIR)/D3D12Interface.o
GENERATED += $(OBJDIR)/D3D12Light.o
GENERATED += $(OBJDIR)/D3D12PostProcess.o
GENERATED += $(OBJDIR)/D3D12Resources.o
GENERATED += $(OBJDIR)/D3D12Shaders.o
GENERATED += $(OBJDIR)/D3D12Surface.o
GENERATED += $(OBJDIR)/D3D12Upload.o
GENERATED += $(OBJDIR)/EngineWin32.o
GENERATED += $(OBJDIR)/Entity.o
GENERATED += $(OBJDIR)/GraphicsPlatform.o
GENERATED += $(OBJDIR)/Input.o
GENERATED += $(OBJDIR)/InputWin32.o
GENERATED += $(OBJDIR)/MainWin32.o
GENERATED += $(OBJDIR)/PlatformLinux.o
GENERATED += $(OBJDIR)/PlatformWin32.o
GENERATED += $(OBJDIR)/Renderer.o
GENERATED += $(OBJDIR)/Script.o
GENERATED += $(OBJDIR)/Transform.o
GENERATED += $(OBJDIR)/VulkanCommandBuffer.o
GENERATED += $(OBJDIR)/VulkanCore.o
GENERATED += $(OBJDIR)/VulkanHelpers.o
GENERATED += $(OBJDIR)/VulkanInterface.o
GENERATED += $(OBJDIR)/VulkanRenderPass.o
GENERATED += $(OBJDIR)/VulkanResources.o
GENERATED += $(OBJDIR)/VulkanSurface.o
GENERATED += $(OBJDIR)/Window.o
OBJECTS += $(OBJDIR)/ContentLoaderWin32.o
OBJECTS += $(OBJDIR)/ContentToEngine.o
OBJECTS += $(OBJDIR)/D3D12Camera.o
OBJECTS += $(OBJDIR)/D3D12Content.o
OBJECTS += $(OBJDIR)/D3D12Core.o
OBJECTS += $(OBJDIR)/D3D12GPass.o
OBJECTS += $(OBJDIR)/D3D12Helpers.o
OBJECTS += $(OBJDIR)/D3D12Interface.o
OBJECTS += $(OBJDIR)/D3D12Light.o
OBJECTS += $(OBJDIR)/D3D12PostProcess.o
OBJECTS += $(OBJDIR)/D3D12Resources.o
OBJECTS += $(OBJDIR)/D3D12Shaders.o
OBJECTS += $(OBJDIR)/D3D12Surface.o
OBJECTS += $(OBJDIR)/D3D12Upload.o
OBJECTS += $(OBJDIR)/EngineWin32.o
OBJECTS += $(OBJDIR)/Entity.o
OBJECTS += $(OBJDIR)/GraphicsPlatform.o
OBJECTS += $(OBJDIR)/Input.o
OBJECTS += $(OBJDIR)/InputWin32.o
OBJECTS += $(OBJDIR)/MainWin32.o
OBJECTS += $(OBJDIR)/PlatformLinux.o
OBJECTS += $(OBJDIR)/PlatformWin32.o
OBJECTS += $(OBJDIR)/Renderer.o
OBJECTS += $(OBJDIR)/Script.o
OBJECTS += $(OBJDIR)/Transform.o
OBJECTS += $(OBJDIR)/VulkanCommandBuffer.o
OBJECTS += $(OBJDIR)/VulkanCore.o
OBJECTS += $(OBJDIR)/VulkanHelpers.o
OBJECTS += $(OBJDIR)/VulkanInterface.o
OBJECTS += $(OBJDIR)/VulkanRenderPass.o
OBJECTS += $(OBJDIR)/VulkanResources.o
OBJECTS += $(OBJDIR)/VulkanSurface.o
OBJECTS += $(OBJDIR)/Window.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Engine
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Engine
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/Entity.o: Components/Entity.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Script.o: Components/Script.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Transform.o: Components/Transform.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ContentLoaderWin32.o: Content/ContentLoaderWin32.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ContentToEngine.o: Content/ContentToEngine.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/EngineWin32.o: Core/EngineWin32.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MainWin32.o: Core/MainWin32.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/D3D12Camera.o: Graphics/Direct3D12/D3D12Camera.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/D3D12Content.o: Graphics/Direct3D12/D3D12Content.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/D3D12Core.o: Graphics/Direct3D12/D3D12Core.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/D3D12GPass.o: Graphics/Direct3D12/D3D12GPass.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/D3D12Helpers.o: Graphics/Direct3D12/D3D12Helpers.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/D3D12Interface.o: Graphics/Direct3D12/D3D12Interface.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/D3D12Light.o: Graphics/Direct3D12/D3D12Light.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/D3D12PostProcess.o: Graphics/Direct3D12/D3D12PostProcess.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/D3D12Resources.o: Graphics/Direct3D12/D3D12Resources.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/D3D12Shaders.o: Graphics/Direct3D12/D3D12Shaders.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/D3D12Surface.o: Graphics/Direct3D12/D3D12Surface.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/D3D12Upload.o: Graphics/Direct3D12/D3D12Upload.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GraphicsPlatform.o: Graphics/GraphicsPlatform.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Renderer.o: Graphics/Renderer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanCommandBuffer.o: Graphics/Vulkan/VulkanCommandBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanCore.o: Graphics/Vulkan/VulkanCore.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanHelpers.o: Graphics/Vulkan/VulkanHelpers.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanInterface.o: Graphics/Vulkan/VulkanInterface.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanRenderPass.o: Graphics/Vulkan/VulkanRenderPass.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanResources.o: Graphics/Vulkan/VulkanResources.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VulkanSurface.o: Graphics/Vulkan/VulkanSurface.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Input.o: Input/Input.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/InputWin32.o: Input/InputWin32.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PlatformLinux.o: Platforms/PlatformLinux.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PlatformWin32.o: Platforms/PlatformWin32.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Window.o: Platforms/Window.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif